// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using EXAM_SYSTEM_API.Infrastructure.Persistence;

#nullable disable

namespace EXAM_SYSTEM_API.Infrastructure.Migrations
{
    [DbContext(typeof(ExamSystemDbContext))]
    partial class ExamSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Thai_100_CI_AS")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EXAM_SYSTEM_API.Domain.Entities.ActivityLog", b =>
                {
                    b.Property<int>("LogId")
                        .HasColumnType("int")
                        .HasColumnName("log_id");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("action");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("datetime")
                        .HasColumnName("timestamp");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("LogId")
                        .HasName("PK__activity__9E2397E0E92B2ADF");

                    b.ToTable("activity_log", (string)null);
                });

            modelBuilder.Entity("EXAM_SYSTEM_API.Domain.Entities.EsChoice", b =>
                {
                    b.Property<int>("ChoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("choice_id")
                        .HasComment("รหัสตัวเลือก");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChoiceId"));

                    b.Property<string>("ChoiceText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("choice_text")
                        .HasComment("เนื้อหาของตัวเลือก");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit")
                        .HasColumnName("is_correct")
                        .HasComment("ระบุว่าตัวเลือกนี้เป็นคำตอบที่ถูกต้องหรือไม่ (true/false)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("question_id")
                        .HasComment("รหัสคำถามที่ตัวเลือกนี้เป็นของมัน");

                    b.HasKey("ChoiceId")
                        .HasName("PK__choices__33CAF83AF7B0737B");

                    b.ToTable("es_choices", (string)null);
                });

            modelBuilder.Entity("EXAM_SYSTEM_API.Domain.Entities.EsExamEnrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("enrollment_id")
                        .HasComment("รหัสการลงทะเบียนสอบ");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<int>("ExamsetId")
                        .HasColumnType("int")
                        .HasColumnName("examset_id")
                        .HasComment("รหัสชุดข้อสอบ");

                    b.Property<int>("NumDays")
                        .HasColumnType("int")
                        .HasColumnName("num_days")
                        .HasComment("จำนวนที่ระบุในการสอบ");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("person_id")
                        .HasComment("รหัสบุคคล");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_date");

                    b.HasKey("EnrollmentId");

                    b.ToTable("es_exam_enrollments", (string)null);
                });

            modelBuilder.Entity("EXAM_SYSTEM_API.Domain.Entities.EsExamFinalResult", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("result_id")
                        .HasComment("รหัสผลสอบ");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResultId"));

                    b.Property<byte[]>("CompletedDate")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion")
                        .HasColumnName("completed_date")
                        .HasComment("วันที่รวมคะแนนเสร็จ");

                    b.Property<int>("ExamsetId")
                        .HasColumnType("int")
                        .HasColumnName("examset_id")
                        .HasComment("รหัสชุดข้อสอบ");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("person_id")
                        .HasComment("รหัสนักเรียน");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("status")
                        .HasComment("สถานะสอบเสร็จหรือยัง");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int")
                        .HasColumnName("total_days")
                        .HasComment("จำนวนวันที่สอบ");

                    b.Property<double?>("TotalScore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("total_score")
                        .HasComment("คะแนนรวมจากทุก Part");

                    b.HasKey("ResultId")
                        .HasName("PK__exam_fin__AFB3C3164D8DA42D");

                    b.ToTable("es_exam_final_results", (string)null);
                });

            modelBuilder.Entity("EXAM_SYSTEM_API.Domain.Entities.EsExamSchedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("schedule_id")
                        .HasComment("รหัสการจัดตารางสอบ");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasComment("วันที่สร้างรายการ");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("end_time")
                        .HasComment("เวลาสิ้นสุดการสอบ");

                    b.Property<int>("EnrollmentId")
                        .HasColumnType("int")
                        .HasColumnName("enrollment_id")
                        .HasComment("รหัสบุคคล");

                    b.Property<int>("PartNo")
                        .HasColumnType("int")
                        .HasColumnName("part_no")
                        .HasComment("ครั้งที่สอบ เช่น ครั้งที่ 1, 2, 3 เป็นต้น");

                    b.Property<DateOnly>("ScheduleDate")
                        .HasColumnType("date")
                        .HasColumnName("schedule_date")
                        .HasComment("วันที่สอบ");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("start_time")
                        .HasComment("เวลาเริ่มสอบ");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasComment("สถานะ 0 คือ ยังไม่ได้สอบ , 1 คือ สอบแล้ว, 2 คือ ไม่ได้สอบ (ยกเลิการสอบอัตโนมัติ)");

                    b.Property<int>("TotalQuestions")
                        .HasColumnType("int")
                        .HasColumnName("total_questions")
                        .HasComment("จำนวนข้อ");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_date")
                        .HasComment("วันที่ปรับปรุงรายการ");

                    b.HasKey("ScheduleId")
                        .HasName("PK_exam_schedules");

                    b.ToTable("es_exam_schedules", (string)null);
                });

            modelBuilder.Entity("EXAM_SYSTEM_API.Domain.Entities.EsExamSet", b =>
                {
                    b.Property<int>("ExamsetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("examset_id")
                        .HasComment("รหัสชุดข้อสอบ");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamsetId"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("created_by")
                        .HasComment("ผู้สร้างชุดข้อสอบ (เชื่อมกับ Users)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasComment("วันที่สร้าง");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description")
                        .HasComment("รายละเอียดของชุดข้อสอบ");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date")
                        .HasComment("วันที่สิ้นสุดของการสอบ");

                    b.Property<string>("ExamsetName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("examset_name")
                        .HasComment("ชื่อชุดข้อสอบ");

                    b.Property<string>("IsUsed")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("nchar(1)")
                        .HasColumnName("is_used")
                        .HasDefaultValueSql("((1))")
                        .IsFixedLength()
                        .UseCollation("Thai_CI_AS");

                    b.Property<int>("NumDateExam")
                        .HasColumnType("int")
                        .HasColumnName("num_date_exam")
                        .HasComment("จำนวนวันที่ใช้สอบ");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date")
                        .HasComment("วันที่เริ่มให้มีการสอบ");

                    b.Property<int?>("StdId")
                        .HasColumnType("int")
                        .HasColumnName("std_id")
                        .HasComment("รหัสมาตรฐาน");

                    b.Property<string>("StdName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("std_name")
                        .HasComment("ชื่อมาตรฐาน");

                    b.Property<int>("TimePerQuestion")
                        .HasColumnType("int")
                        .HasColumnName("time_per_question")
                        .HasComment("ระยะเวลาทำข้อสอบต่อ 1 ข้อ  (หน่วย: วินาที)");

                    b.Property<int>("TotalQuestions")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(300)
                        .HasColumnName("total_questions")
                        .HasComment("จำนวนข้อสอบทั้งหมด");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_date");

                    b.HasKey("ExamsetId")
                        .HasName("PK__exam_set__EA6772E4F5B0C197");

                    b.ToTable("es_exam_sets", (string)null);
                });

            modelBuilder.Entity("EXAM_SYSTEM_API.Domain.Entities.EsExamTaken", b =>
                {
                    b.Property<int>("ExamTakenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("exam_taken_id")
                        .HasComment("รหัสของการสอบ");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamTakenId"));

                    b.Property<DateOnly>("ExamTakenDate")
                        .HasColumnType("date")
                        .HasColumnName("exam_taken_date");

                    b.Property<int>("GeneratedPartId")
                        .HasColumnType("int")
                        .HasColumnName("generated_part_id")
                        .HasComment("รหัสของ Part ที่กำลังสอบ");

                    b.Property<double?>("Score")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("score")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("SelectionId")
                        .HasColumnType("int")
                        .HasColumnName("selection_id")
                        .HasComment("รหัสของรายการเลือก");

                    b.Property<TimeOnly>("StartedTime")
                        .HasColumnType("time")
                        .HasColumnName("started_time")
                        .HasComment("เวลาที่เริ่มสอบ");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("status")
                        .HasComment("สถานะการสอบ");

                    b.Property<TimeOnly?>("SubmittedTime")
                        .HasColumnType("time")
                        .HasColumnName("submitted_time")
                        .HasComment("เวลาที่ส่งข้อสอบ");

                    b.HasKey("ExamTakenId")
                        .HasName("PK__exam_tak__1EC7A272006A86AA");

                    b.ToTable("es_exam_taken", (string)null);
                });

            modelBuilder.Entity("EXAM_SYSTEM_API.Domain.Entities.EsExamUserSelection", b =>
                {
                    b.Property<int>("SelectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("selection_id")
                        .HasComment("รหัสของรายการเลือก");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SelectionId"));

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("completed_at")
                        .HasComment("วันที่สอบเสร็จ");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasComment("วันที่สร้าง");

                    b.Property<int>("ExamsetId")
                        .HasColumnType("int")
                        .HasColumnName("examset_id")
                        .HasComment("รหัสชุดข้อสอบ");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("person_id")
                        .HasComment("รหัสผู้สอบ");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("status")
                        .HasComment("สถานะการสอบ");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int")
                        .HasColumnName("total_days")
                        .HasComment("จำนวนวันสอบที่เลือก (1-5 วัน)");

                    b.HasKey("SelectionId")
                        .HasName("PK__exam_use__010BE539D8B988E3");

                    b.ToTable("es_exam_user_selection", (string)null);
                });

            modelBuilder.Entity("EXAM_SYSTEM_API.Domain.Entities.EsGeneratedExamPart", b =>
                {
                    b.Property<int>("GeneratedPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("generated_part_id")
                        .HasComment("รหัสของ Part");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneratedPartId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasComment("วันที่สร้าง");

                    b.Property<int>("NumQuestions")
                        .HasColumnType("int")
                        .HasColumnName("num_questions")
                        .HasComment("จำนวนข้อสอบใน Part นี้");

                    b.Property<int>("PartNumber")
                        .HasColumnType("int")
                        .HasColumnName("part_number")
                        .HasComment("วันที่ของการสอบ");

                    b.Property<int>("PersonId")
                        .HasColumnType("int")
                        .HasColumnName("person_id")
                        .HasComment("รหัสบุคคล");

                    b.Property<DateOnly>("ScheduledDate")
                        .HasColumnType("date")
                        .HasColumnName("scheduled_date")
                        .HasComment("วันที่กำหนดสอบของ Part นี้");

                    b.Property<int>("SelectionId")
                        .HasColumnType("int")
                        .HasColumnName("selection_id")
                        .HasComment("รหัสของรายการเลือก");

                    b.HasKey("GeneratedPartId")
                        .HasName("PK__generate__31E71B922A2D0DD1");

                    b.ToTable("es_generated_exam_parts", (string)null);
                });

            modelBuilder.Entity("EXAM_SYSTEM_API.Domain.Entities.EsGeneratedExamQuestion", b =>
                {
                    b.Property<int>("GeneratedQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("generated_question_id")
                        .HasComment("รหัสรายการ");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneratedQuestionId"));

                    b.Property<int>("GeneratedPartId")
                        .HasColumnType("int")
                        .HasColumnName("generated_part_id")
                        .HasComment("รหัสของ Part");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("question_id")
                        .HasComment("ข้อสอบที่ถูกสุ่ม");

                    b.HasKey("GeneratedQuestionId")
                        .HasName("PK__generate__5741C38A6543A9B1");

                    b.ToTable("es_generated_exam_questions", (string)null);
                });

            modelBuilder.Entity("EXAM_SYSTEM_API.Domain.Entities.EsQuestion", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("question_id")
                        .HasComment("รหัสข้อสอบ");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("approved_at")
                        .HasComment("วันที่อนุมัติ");

                    b.Property<string>("ApprovedBy")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("approved_by")
                        .HasDefaultValueSql("(NULL)")
                        .HasComment("ผู้อนุมัติข้อสอบ");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("created_by")
                        .HasComment("ผู้สร้างข้อสอบ");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasComment("วันที่สร้าง");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("difficulty")
                        .HasComment("ระดับความยากของข้อสอบ");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("question_text")
                        .HasComment("เนื้อหาของคำถาม");

                    b.Property<string>("QuestionType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("question_type")
                        .HasComment("ประเภทของคำถาม");

                    b.Property<string>("RefStdId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("ref_std_id");

                    b.Property<string>("StdGroup")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("std_group")
                        .HasComment("กลุ่มมาตรฐาน");

                    b.Property<string>("StdType")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("std_type");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("subject")
                        .HasComment("วิชาของข้อสอบ");

                    b.HasKey("QuestionId")
                        .HasName("PK__question__2EC21549CB6E8A7F");

                    b.ToTable("es_questions", (string)null);
                });

            modelBuilder.Entity("EXAM_SYSTEM_API.Domain.Entities.User", b =>
                {
                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("full_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password_hash");

                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasIndex(new[] { "Email" }, "UQ__users__AB6E6164810BD010")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "UQ__users__F3DBC572BC65037F")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
