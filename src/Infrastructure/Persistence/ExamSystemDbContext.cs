// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;
using EXAM_SYSTEM_API.Domain.Entities;

namespace EXAM_SYSTEM_API.Infrastructure.Persistence;

public partial class ExamSystemDbContext : DbContext
{
    public ExamSystemDbContext(DbContextOptions<ExamSystemDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<ActivityLog> ActivityLogs { get; set; }

    public virtual DbSet<EsChoice> EsChoices { get; set; }

    public virtual DbSet<EsExamEnrollment> EsExamEnrollments { get; set; }

    public virtual DbSet<EsExamFinalResult> EsExamFinalResults { get; set; }

    public virtual DbSet<EsExamInstruction> EsExamInstructions { get; set; }

    public virtual DbSet<EsExamSchedule> EsExamSchedules { get; set; }

    public virtual DbSet<EsExamSet> EsExamSets { get; set; }

    public virtual DbSet<EsExamTaken> EsExamTakens { get; set; }

    public virtual DbSet<EsExamTakenDetail> EsExamTakenDetails { get; set; }

    public virtual DbSet<EsExamReschedule> EsExamReschedules { get; set; }

    public virtual DbSet<EsExamUserSelection> EsExamUserSelections { get; set; }

    public virtual DbSet<EsGcioCandidate> EsGcioCandidates { get; set; }

    public virtual DbSet<EsGeneratedExamPart> EsGeneratedExamParts { get; set; }

    public virtual DbSet<EsGeneratedExamQuestion> EsGeneratedExamQuestions { get; set; }

    public virtual DbSet<EsMultipleChoiceQuestion> EsMultipleChoiceQuestions { get; set; }

    public virtual DbSet<EsQuestion> EsQuestions { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ActivityLog>(entity =>
        {
            entity.HasKey(e => e.LogId).HasName("PK__activity__9E2397E0F168FD96");

            entity.ToTable("activity_log");

            entity.Property(e => e.LogId)
                .ValueGeneratedNever()
                .HasColumnName("log_id");
            entity.Property(e => e.Action)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("action");
            entity.Property(e => e.Timestamp)
                .HasColumnType("datetime")
                .HasColumnName("timestamp");
            entity.Property(e => e.UserId).HasColumnName("user_id");
        });

        modelBuilder.Entity<EsChoice>(entity =>
        {
            entity.HasKey(e => e.ChoiceId).HasName("PK__choices__33CAF83AF7B0737B");

            entity.ToTable("es_choices");

            entity.Property(e => e.ChoiceId)
                .HasComment("รหัสตัวเลือก")
                .HasColumnName("choice_id");
            entity.Property(e => e.ChoiceText)
                .IsRequired()
                .HasComment("เนื้อหาของตัวเลือก")
                .HasColumnType("text")
                .HasColumnName("choice_text");
            entity.Property(e => e.IsCorrect)
                .HasComment("ระบุว่าตัวเลือกนี้เป็นคำตอบที่ถูกต้องหรือไม่ (true/false)")
                .HasColumnName("is_correct");
            entity.Property(e => e.QuestionId)
                .HasComment("รหัสคำถามที่ตัวเลือกนี้เป็นของมัน")
                .HasColumnName("question_id");
        });

        modelBuilder.Entity<EsExamEnrollment>(entity =>
        {
            entity.HasKey(e => e.EnrollmentId);

            entity.ToTable("es_exam_enrollments");

            entity.Property(e => e.EnrollmentId)
                .HasComment("รหัสการลงทะเบียนสอบ")
                .HasColumnName("enrollment_id");
            entity.Property(e => e.CreatedDate)
                .HasColumnType("datetime")
                .HasColumnName("created_date");
            entity.Property(e => e.ExamsetId)
                .HasComment("รหัสชุดข้อสอบ")
                .HasColumnName("examset_id");
            entity.Property(e => e.NumDays)
                .HasComment("จำนวนที่ระบุในการสอบ")
                .HasColumnName("num_days");
            entity.Property(e => e.PersonId)
                .HasComment("รหัสบุคคล")
                .HasColumnName("person_id");
            entity.Property(e => e.UpdatedDate)
                .HasColumnType("datetime")
                .HasColumnName("updated_date");
        });

        modelBuilder.Entity<EsExamFinalResult>(entity =>
        {
            entity.HasKey(e => e.ResultId).HasName("PK__exam_fin__AFB3C3164D8DA42D");

            entity.ToTable("es_exam_final_results");

            entity.Property(e => e.ResultId)
                .HasComment("รหัสผลสอบ")
                .HasColumnName("result_id");
            entity.Property(e => e.CompletedDate)
                .IsRowVersion()
                .IsConcurrencyToken()
                .HasComment("วันที่รวมคะแนนเสร็จ")
                .HasColumnName("completed_date");
            entity.Property(e => e.ExamsetId)
                .HasComment("รหัสชุดข้อสอบ")
                .HasColumnName("examset_id");
            entity.Property(e => e.PersonId)
                .HasComment("รหัสนักเรียน")
                .HasColumnName("person_id");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasComment("สถานะสอบเสร็จหรือยัง")
                .HasColumnName("status");
            entity.Property(e => e.TotalDays)
                .HasComment("จำนวนวันที่สอบ")
                .HasColumnName("total_days");
            entity.Property(e => e.TotalScore)
                .HasDefaultValue(0.0)
                .HasComment("คะแนนรวมจากทุก Part")
                .HasColumnName("total_score");
        });

        modelBuilder.Entity<EsExamInstruction>(entity =>
        {
            entity.HasKey(e => e.InstructionId);

            entity.ToTable("es_exam_instructions");

            entity.Property(e => e.InstructionId)
                .HasComment("รหัสคำชี้แจง")
                .HasColumnName("instruction_id");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(150)
                .HasComment("ผู้สร้างรายการข้อมูล")
                .HasColumnName("created_by");
            entity.Property(e => e.CreatedDate)
                .HasComment("วันที่สร้างรายการข้อมูล")
                .HasColumnType("datetime")
                .HasColumnName("created_date");
            entity.Property(e => e.Description)
                .HasColumnType("text")
                .HasColumnName("description");
            entity.Property(e => e.ExamsetId)
                .HasComment("รหัสชุดข้อสอบ")
                .HasColumnName("examset_id");
            entity.Property(e => e.ShowBeforeExam).HasColumnName("show_before_exam");
            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(150)
                .HasColumnName("title");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(150)
                .HasComment("ผู้ปรับปรุงรายการข้อมูล")
                .HasColumnName("updated_by");
            entity.Property(e => e.UpdatedDate)
                .HasComment("วันที่ปรับปรุงรายการข้อมูล")
                .HasColumnType("datetime")
                .HasColumnName("updated_date");
        });

        modelBuilder.Entity<EsExamSchedule>(entity =>
        {
            entity.HasKey(e => e.ScheduleId).HasName("PK_exam_schedules");

            entity.ToTable("es_exam_schedules");

            entity.Property(e => e.ScheduleId)
                .HasComment("รหัสการจัดตารางสอบ")
                .HasColumnName("schedule_id");
            entity.Property(e => e.CreatedDate)
                .HasComment("วันที่สร้างรายการ")
                .HasColumnType("datetime")
                .HasColumnName("created_date");
            entity.Property(e => e.EndTime)
                .HasComment("เวลาสิ้นสุดการสอบ")
                .HasColumnName("end_time");
            entity.Property(e => e.EnrollmentId)
                .HasComment("รหัสบุคคล")
                .HasColumnName("enrollment_id");
            entity.Property(e => e.PartNo)
                .HasComment("ครั้งที่สอบ เช่น ครั้งที่ 1, 2, 3 เป็นต้น")
                .HasColumnName("part_no");
            entity.Property(e => e.ScheduleDate)
                .HasComment("วันที่สอบ")
                .HasColumnName("schedule_date");
            entity.Property(e => e.StartTime)
                .HasComment("เวลาเริ่มสอบ")
                .HasColumnName("start_time");
            entity.Property(e => e.Status)
                .HasComment("สถานะ 0 คือ ยังไม่ได้สอบ , 1 คือ สอบแล้ว, 2 คือ ไม่ได้สอบ (ยกเลิการสอบอัตโนมัติ)")
                .HasColumnName("status");
            entity.Property(e => e.TotalQuestions)
                .HasComment("จำนวนข้อ")
                .HasColumnName("total_questions");
            entity.Property(e => e.UpdatedDate)
                .HasComment("วันที่ปรับปรุงรายการ")
                .HasColumnType("datetime")
                .HasColumnName("updated_date");
        });

        modelBuilder.Entity<EsExamReschedule>(entity =>
        {
            entity.HasKey(e => e.RescheduleId);

            entity.ToTable("es_exam_reschedules");

            entity.Property(e => e.RescheduleId).HasColumnName("reschedule_id");
            entity.Property(e => e.CreatedDate)
                .HasColumnType("datetime")
                .HasColumnName("created_date");
            entity.Property(e => e.EndTime).HasColumnName("end_time");
            entity.Property(e => e.Reason);
            entity.Property(e => e.ScheduleDate).HasColumnName("schedule_date");
            entity.Property(e => e.ScheduleId).HasColumnName("schedule_id");
            entity.Property(e => e.StartTime).HasColumnName("start_time");
            entity.Property(e => e.UpdatedDate)
                .HasColumnType("datetime")
                .HasColumnName("updated_date");
        });

        modelBuilder.Entity<EsExamSet>(entity =>
        {
            entity.HasKey(e => e.ExamsetId).HasName("PK__exam_set__EA6772E4F5B0C197");

            entity.ToTable("es_exam_sets");

            entity.Property(e => e.ExamsetId)
                .HasComment("รหัสชุดข้อสอบ")
                .HasColumnName("examset_id");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(150)
                .HasComment("ผู้สร้างชุดข้อสอบ (เชื่อมกับ Users)")
                .HasColumnName("created_by");
            entity.Property(e => e.CreatedDate)
                .HasComment("วันที่สร้าง")
                .HasColumnType("datetime")
                .HasColumnName("created_date");
            entity.Property(e => e.Description)
                .HasComment("รายละเอียดของชุดข้อสอบ")
                .HasColumnType("text")
                .HasColumnName("description");
            entity.Property(e => e.EndDate)
                .HasComment("วันที่สิ้นสุดของการสอบ")
                .HasColumnName("end_date");
            entity.Property(e => e.ExamsetName)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("ชื่อชุดข้อสอบ")
                .HasColumnName("examset_name");
            entity.Property(e => e.ExamsetType)
                .HasComment("ประเภทชุดข้อสอบ เช่น 1 คือ GCIO, 2 คือ มาตรฐาน DG")
                .HasColumnName("examset_type");
            entity.Property(e => e.IsUsed)
                .IsRequired()
                .HasMaxLength(1)
                .HasDefaultValueSql("((1))")
                .IsFixedLength()
                .HasColumnName("is_used");
            entity.Property(e => e.MaxScore)
                .HasComment("คะแนนเต็มของข้อสอบชุดนี้")
                .HasColumnName("max_score");
            entity.Property(e => e.NumDateExam)
                .HasComment("จำนวนวันที่ใช้สอบ")
                .HasColumnName("num_date_exam");
            entity.Property(e => e.PassPercentage)
                .HasComment("เปอร์เซ็นต์ที่ต้องได้เพื่อผ่าน เช่น 60.00")
                .HasColumnType("decimal(5, 2)")
                .HasColumnName("pass_percentage");
            entity.Property(e => e.StartDate)
                .HasComment("วันที่เริ่มให้มีการสอบ")
                .HasColumnName("start_date");
            entity.Property(e => e.StdId)
                .HasComment("รหัสมาตรฐาน")
                .HasColumnName("std_id");
            entity.Property(e => e.StdName)
                .IsRequired()
                .HasMaxLength(250)
                .HasComment("ชื่อมาตรฐาน")
                .HasColumnName("std_name");
            entity.Property(e => e.TimePerQuestion)
                .HasComment("ระยะเวลาทำข้อสอบต่อ 1 ข้อ  (หน่วย: วินาที)")
                .HasColumnName("time_per_question");
            entity.Property(e => e.TotalQuestions)
                .HasDefaultValue(300)
                .HasComment("จำนวนข้อสอบทั้งหมด")
                .HasColumnName("total_questions");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(150)
                .HasColumnName("updated_by");
            entity.Property(e => e.UpdatedDate)
                .HasColumnType("datetime")
                .HasColumnName("updated_date");
        });

        modelBuilder.Entity<EsExamTaken>(entity =>
        {
            entity.HasKey(e => e.ExamTakenId).HasName("PK__exam_tak__1EC7A272006A86AA");

            entity.ToTable("es_exam_taken");

            entity.Property(e => e.ExamTakenId)
                .HasComment("รหัสของการสอบ")
                .HasColumnName("exam_taken_id");
            entity.Property(e => e.ScheduleId)
                .HasComment("รหัสของ Part ที่กำลังสอบ")
                .HasColumnName("schedule_id");
            entity.Property(e => e.Score)
                .HasDefaultValueSql("(NULL)")
                .HasColumnName("score");
            entity.Property(e => e.StartedTime)
                .HasComment("เวลาที่เริ่มสอบ")
                .HasColumnName("started_time");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasComment("สถานะการสอบ")
                .HasColumnName("status");
            entity.Property(e => e.SubmittedTime)
                .HasComment("เวลาที่ส่งข้อสอบ")
                .HasColumnName("submitted_time");
        });

        modelBuilder.Entity<EsExamTakenDetail>(entity =>
        {
            entity.HasKey(e => e.ExamTakenDetailId).HasName("PK__es_exam___592ECD0ECE5AC94D");

            entity.ToTable("es_exam_taken_detail");

            entity.Property(e => e.ExamTakenDetailId).HasColumnName("exam_taken_detail_id");
            entity.Property(e => e.ChoiceAnswer)
                .IsRequired()
                .HasColumnType("text")
                .HasColumnName("choice_answer");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(150)
                .HasColumnName("created_by");
            entity.Property(e => e.CreatedDate)
                .HasColumnType("datetime")
                .HasColumnName("created_date");
            entity.Property(e => e.ExamTakenId)
                .HasComment("รหัสการทำแบบทดสอบ")
                .HasColumnName("exam_taken_id");
            entity.Property(e => e.NumCorrect)
                .HasComment("จำนวนข้อที่ตอบถูก")
                .HasColumnName("num_correct");
            entity.Property(e => e.NumIncorrect)
                .HasComment("จำนวนข้อที่ตอบผิด")
                .HasColumnName("num_incorrect");
        });

        modelBuilder.Entity<EsExamUserSelection>(entity =>
        {
            entity.HasKey(e => e.SelectionId).HasName("PK__exam_use__010BE539D8B988E3");

            entity.ToTable("es_exam_user_selection");

            entity.Property(e => e.SelectionId)
                .HasComment("รหัสของรายการเลือก")
                .HasColumnName("selection_id");
            entity.Property(e => e.CompletedAt)
                .HasComment("วันที่สอบเสร็จ")
                .HasColumnType("datetime")
                .HasColumnName("completed_at");
            entity.Property(e => e.CreatedDate)
                .HasComment("วันที่สร้าง")
                .HasColumnType("datetime")
                .HasColumnName("created_date");
            entity.Property(e => e.ExamsetId)
                .HasComment("รหัสชุดข้อสอบ")
                .HasColumnName("examset_id");
            entity.Property(e => e.PersonId)
                .HasComment("รหัสผู้สอบ")
                .HasColumnName("person_id");
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasComment("สถานะการสอบ")
                .HasColumnName("status");
            entity.Property(e => e.TotalDays)
                .HasComment("จำนวนวันสอบที่เลือก (1-5 วัน)")
                .HasColumnName("total_days");
        });

        modelBuilder.Entity<EsGcioCandidate>(entity =>
        {
            entity.ToTable("es_gcio_candidates");

            entity.Property(e => e.Id)
                .HasComment("รหัสออโต้รัน")
                .HasColumnName("id");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .HasComment("อีเมล")
                .HasColumnName("email");
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(150)
                .HasComment("ชื่อ")
                .HasColumnName("first_name");
            entity.Property(e => e.InitialName)
                .IsRequired()
                .HasMaxLength(50)
                .HasComment("คำนำหน้าชื่อ")
                .HasColumnName("initial_name");
            entity.Property(e => e.IsUsed)
                .HasComment("สถานะการใช้งาน 1 คือ ใช้งาน, 0 คือ ไม่ใช้งาน")
                .HasColumnName("is_used");
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(150)
                .HasComment("นามสกุล")
                .HasColumnName("last_name");
            entity.Property(e => e.MobilePhone)
                .HasMaxLength(10)
                .HasComment("เบอร์โทรศัพท์")
                .HasColumnName("mobile_phone");
            entity.Property(e => e.OrgName)
                .HasMaxLength(250)
                .HasColumnName("org_name");
            entity.Property(e => e.PositionName)
                .HasMaxLength(150)
                .HasColumnName("position_name");
            entity.Property(e => e.Remark)
                .HasComment("หมายเหตุ")
                .HasColumnType("text")
                .HasColumnName("remark");
        });

        modelBuilder.Entity<EsGeneratedExamPart>(entity =>
        {
            entity.HasKey(e => e.GeneratedPartId).HasName("PK__generate__31E71B922A2D0DD1");

            entity.ToTable("es_generated_exam_parts");

            entity.Property(e => e.GeneratedPartId)
                .HasComment("รหัสของ Part")
                .HasColumnName("generated_part_id");
            entity.Property(e => e.CreatedDate)
                .HasComment("วันที่สร้าง")
                .HasColumnType("datetime")
                .HasColumnName("created_date");
            entity.Property(e => e.NumQuestions)
                .HasComment("จำนวนข้อสอบใน Part นี้")
                .HasColumnName("num_questions");
            entity.Property(e => e.PartNumber)
                .HasComment("วันที่ของการสอบ")
                .HasColumnName("part_number");
            entity.Property(e => e.PersonId)
                .HasComment("รหัสบุคคล")
                .HasColumnName("person_id");
            entity.Property(e => e.ScheduledDate)
                .HasComment("วันที่กำหนดสอบของ Part นี้")
                .HasColumnName("scheduled_date");
            entity.Property(e => e.SelectionId)
                .HasComment("รหัสของรายการเลือก")
                .HasColumnName("selection_id");
        });

        modelBuilder.Entity<EsGeneratedExamQuestion>(entity =>
        {
            entity.HasKey(e => e.GeneratedQuestionId).HasName("PK__generate__5741C38A6543A9B1");

            entity.ToTable("es_generated_exam_questions");

            entity.Property(e => e.GeneratedQuestionId)
                .HasComment("รหัสรายการ")
                .HasColumnName("generated_question_id");
            entity.Property(e => e.QuestionId)
                .HasComment("ข้อสอบที่ถูกสุ่ม")
                .HasColumnName("question_id");
            entity.Property(e => e.ScheduleId)
                .HasComment("รหัสของ Part")
                .HasColumnName("schedule_id");
        });

        modelBuilder.Entity<EsMultipleChoiceQuestion>(entity =>
        {
            entity.HasKey(e => e.QuestionId);

            entity.ToTable("es_multiple_choice_questions");

            entity.Property(e => e.QuestionId)
                .HasComment("รหัสคำถาม")
                .HasColumnName("question_id");
            entity.Property(e => e.ChoiceA)
                .IsRequired()
                .HasMaxLength(250)
                .HasComment("ตัวเลือก ก")
                .HasColumnName("choice_a");
            entity.Property(e => e.ChoiceB)
                .IsRequired()
                .HasMaxLength(250)
                .HasComment("ตัวเลือก ข")
                .HasColumnName("choice_b");
            entity.Property(e => e.ChoiceC)
                .IsRequired()
                .HasMaxLength(250)
                .HasComment("ตัวเลือก ค")
                .HasColumnName("choice_c");
            entity.Property(e => e.ChoiceD)
                .IsRequired()
                .HasMaxLength(250)
                .HasComment("ตัวเลือก ง")
                .HasColumnName("choice_d");
            entity.Property(e => e.CorrectAnswer)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("คำตอบที่ถูกต้อง")
                .HasColumnName("correct_answer");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(250)
                .HasComment("ผู้สร้างรายการข้อมูล")
                .HasColumnName("created_by");
            entity.Property(e => e.CreatedDate)
                .HasComment("วันที่สร้างรายการข้อมูล")
                .HasColumnType("datetime")
                .HasColumnName("created_date");
            entity.Property(e => e.Difficulty)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasComment("ระดับความยากง่าย")
                .HasColumnName("difficulty");
            entity.Property(e => e.IsUsed)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("((1))")
                .HasComment("สถานะการใช้งาน 1 คือ ใช้งาน , 0 คือ ไม่ใช้งาน")
                .HasColumnName("is_used");
            entity.Property(e => e.QuestionText)
                .IsRequired()
                .HasMaxLength(250)
                .HasComment("คำถาม")
                .HasColumnName("question_text");
            entity.Property(e => e.RefStdId)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasComment("รหัสอ้างอิงของมาตรฐาน")
                .HasColumnName("ref_std_id");
            entity.Property(e => e.StdGroup)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasComment("รหัสกลุ่มมาตรฐาน")
                .HasColumnName("std_group");
            entity.Property(e => e.StdType)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasComment("ออกข้อสอบตามประเภทใด ( 1คือ คุณวุฒิ, 2 คือ UOC, 3 คือ EOC,  4 คือ PC)")
                .HasColumnName("std_type");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(250)
                .HasComment("ผู้ปรับปรุงรายการข้อมูล")
                .HasColumnName("updated_by");
            entity.Property(e => e.UpdatedDate)
                .HasComment("วันที่ปรับปรุงรายการข้อมูล")
                .HasColumnType("datetime")
                .HasColumnName("updated_date");
        });

        modelBuilder.Entity<EsQuestion>(entity =>
        {
            entity.HasKey(e => e.QuestionId).HasName("PK__question__2EC21549CB6E8A7F");

            entity.ToTable("es_questions");

            entity.Property(e => e.QuestionId)
                .HasComment("รหัสข้อสอบ")
                .HasColumnName("question_id");
            entity.Property(e => e.ApprovedAt)
                .HasComment("วันที่อนุมัติ")
                .HasColumnType("datetime")
                .HasColumnName("approved_at");
            entity.Property(e => e.ApprovedBy)
                .HasMaxLength(150)
                .HasDefaultValueSql("(NULL)")
                .HasComment("ผู้อนุมัติข้อสอบ")
                .HasColumnName("approved_by");
            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(150)
                .HasComment("ผู้สร้างข้อสอบ")
                .HasColumnName("created_by");
            entity.Property(e => e.CreatedDate)
                .HasComment("วันที่สร้าง")
                .HasColumnType("datetime")
                .HasColumnName("created_date");
            entity.Property(e => e.Difficulty)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasComment("ระดับความยากของข้อสอบ")
                .HasColumnName("difficulty");
            entity.Property(e => e.QuestionText)
                .IsRequired()
                .HasComment("เนื้อหาของคำถาม")
                .HasColumnType("text")
                .HasColumnName("question_text");
            entity.Property(e => e.QuestionType)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasComment("ประเภทของคำถาม")
                .HasColumnName("question_type");
            entity.Property(e => e.RefStdId)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("ref_std_id");
            entity.Property(e => e.StdGroup)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasComment("กลุ่มมาตรฐาน")
                .HasColumnName("std_group");
            entity.Property(e => e.StdType)
                .HasMaxLength(5)
                .IsUnicode(false)
                .HasColumnName("std_type");
            entity.Property(e => e.Subject)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("วิชาของข้อสอบ")
                .HasColumnName("subject");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.ToTable("users");

            entity.HasIndex(e => e.Email, "UQ__users__AB6E6164810BD010").IsUnique();

            entity.HasIndex(e => e.Username, "UQ__users__F3DBC572BC65037F").IsUnique();

            entity.Property(e => e.UserId).HasColumnName("user_id");
            entity.Property(e => e.CreatedAt)
                .HasColumnType("datetime")
                .HasColumnName("created_at");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("full_name");
            entity.Property(e => e.PasswordHash)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("password_hash");
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("username");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}